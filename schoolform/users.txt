## MAKING LOGINS
- Let's say we already create a paths for signup and logins.
- Let's import the ff. first: from django.contrib.auth.forms import UserCreationForm

- Now add a views function:

	def signup(request):
		myForm = UserCreationForm()
		if request.method == 'POST':
			myForm = UserCreationForm(request.POST)
			if myForm.is_valid():
				myForm.save()
				return HttpResponseRedirect('/')
		return render(request,'registration/signup.html',{'form':myForm})

-This code is working. It can make an account if your information is valid and you can see all the accunts in the admin page. But we are going to add another attribute that 
needs the user email using forms. In able to do that, type the ff. in your forms.py:

	from django.contrib.auth.forms import UserCreationForm
	from django.contrib.auth.models import User
	from .models import applicant

	class CreateUserForm(UserCreationForm):
		class Meta:
			model = User
			fields = ['username','email','password1','password2']

- Now in views.py/signup, import the form 'CreateUserForm()' from the forms.py replace 
every 'UserCreationForm' of 'CreateUserForm' instead:

	# for manual user sign up form
	from django.contrib.auth.forms import UserCreationForm

	def signup(request):
		myForm = UserCreationForm()
		if request.method == 'POST':
			myForm = UserCreationForm(request.POST)
			if myForm.is_valid():
				myForm.save()
				return HttpResponseRedirect('/')
		return render(request,'registration/signup.html',{'form':myForm})

- Designing: After copying and pasting the HTML code, find where the form starts and 
move the csrf token over there.

- Next, find all the inputs inside the divs where the context style are in. Replace those inputs of our code imports. EX: 
Replace <input type="text" name="username"> into {{forms.username}}

- To direct to login page after we signup, type:
	from django.shortcuts import render,redirect

- If you had import django.shortcuts already, simply add the 'redirect' to imports. 
Next add the ff. in the if 'myForm.is_valid()' statement at views.py/signup():
	return redirect('login')

- To show the errors on your page, simply add the ff. above the 'Login' input tag:
					{{form.errors}}		<!-- above the login -->
					<div class="mt-4">

